const Stripe = require('stripe');

// Inicializar Stripe com a chave secreta
const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {
  apiVersion: '2024-12-18.acacia',
});

async function createStripeProducts() {
  try {
    console.log('üöÄ Criando produtos e pre√ßos no Stripe...\n');

    // 1. Criar produto Free (apenas para refer√™ncia, n√£o ter√° pre√ßo)
    console.log('üìù Criando produto Free...');
    const freeProduct = await stripe.products.create({
      name: 'Retrat.ai - Gratuito',
      description: 'Plano gratuito com 5 gera√ß√µes por semana',
      metadata: {
        plan_id: 'free'
      }
    });
    console.log(`‚úÖ Produto Free criado: ${freeProduct.id}\n`);

    // 2. Criar produto Pro
    console.log('üìù Criando produto Pro...');
    const proProduct = await stripe.products.create({
      name: 'Retrat.ai - Pro',
      description: 'Plano profissional com gera√ß√µes ilimitadas e recursos avan√ßados',
      metadata: {
        plan_id: 'pro'
      }
    });
    console.log(`‚úÖ Produto Pro criado: ${proProduct.id}`);

    // 3. Criar pre√ßo para o produto Pro (R$ 29,00/m√™s)
    console.log('üí∞ Criando pre√ßo para o produto Pro...');
    const proPrice = await stripe.prices.create({
      product: proProduct.id,
      unit_amount: 2900, // R$ 29,00 em centavos
      currency: 'brl',
      recurring: {
        interval: 'month',
      },
      metadata: {
        plan_id: 'pro'
      }
    });
    console.log(`‚úÖ Pre√ßo Pro criado: ${proPrice.id}\n`);

    // 4. Mostrar resumo
    console.log('üìã RESUMO DOS IDS CRIADOS:');
    console.log('================================');
    console.log(`Free Product ID: ${freeProduct.id}`);
    console.log(`Pro Product ID:  ${proProduct.id}`);
    console.log(`Pro Price ID:    ${proPrice.id}`);
    console.log('================================\n');

    // 5. Gerar SQL para atualizar a base de dados
    console.log('üóÑÔ∏è  SQL para atualizar os planos no banco:');
    console.log('================================');
    console.log(`UPDATE subscription_plans SET stripe_price_id = NULL WHERE id = 'free';`);
    console.log(`UPDATE subscription_plans SET stripe_price_id = '${proPrice.id}' WHERE id = 'pro';`);
    console.log('================================\n');

    // 6. Gerar configura√ß√£o para .env
    console.log('‚öôÔ∏è  Adicione estas vari√°veis ao seu .env.local:');
    console.log('================================');
    console.log(`STRIPE_FREE_PRODUCT_ID=${freeProduct.id}`);
    console.log(`STRIPE_PRO_PRODUCT_ID=${proProduct.id}`);
    console.log(`STRIPE_PRO_PRICE_ID=${proPrice.id}`);
    console.log('================================\n');

    console.log('‚úÖ Configura√ß√£o do Stripe conclu√≠da!');
    console.log('üìå Pr√≥ximos passos:');
    console.log('   1. Execute o SQL acima no Supabase');
    console.log('   2. Adicione as vari√°veis ao .env.local');
    console.log('   3. Configure o webhook no Stripe Dashboard');

  } catch (error) {
    console.error('‚ùå Erro ao criar produtos:', error.message);
    if (error.type === 'StripeAuthenticationError') {
      console.error('üîë Verifique se STRIPE_SECRET_KEY est√° configurada corretamente');
    }
  }
}

// Executar apenas se chamado diretamente
if (require.main === module) {
  if (!process.env.STRIPE_SECRET_KEY) {
    console.error('‚ùå STRIPE_SECRET_KEY n√£o encontrada nas vari√°veis de ambiente');
    process.exit(1);
  }

  createStripeProducts();
}

module.exports = { createStripeProducts };